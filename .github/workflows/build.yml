# This file was generated using Kotlin DSL (.github/workflows/src.main.kts).
# If you want to modify the workflow, please change the Kotlin file and regenerate this YAML file.
# Generated with https://github.com/typesafegithub/github-workflows-kt

name: 'Build'
on:
  push:
    paths-ignore:
    - '**/*.md'
  pull_request:
    paths-ignore:
    - '**/*macosDmg.md'
jobs:
  build_github-windows-2022:
    name: 'Build (Windows Server 2022 x86_64)'
    runs-on:
    - 'windows-2022'
    permissions:
      actions: 'write'
    steps:
    - id: 'step-0'
      uses: 'actions/checkout@v4'
      with:
        lfs: 'true'
        submodules: 'recursive'
    - id: 'step-1'
      name: 'Setup JBR 21 for other OS'
      uses: 'gmitch215/setup-java@6d2c5e1f82f180ae79f799f0ed6e3e5efb4e664d'
      with:
        java-version: '21'
        distribution: 'jetbrains'
      env:
        GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    - id: 'step-2'
      run: 'echo "jvm.toolchain.version=21" >> local.properties'
    - id: 'step-3'
      name: 'Setup Gradle'
      uses: 'gradle/actions/setup-gradle@v3'
      with:
        cache-disabled: 'true'
    - id: 'step-4'
      name: 'Clean and download dependencies'
      uses: 'nick-fields/retry@v2'
      with:
        timeout_minutes: '60'
        max_attempts: '3'
        command: './gradlew "--scan" "--no-configuration-cache" "-Porg.gradle.daemon.idletimeout=60000" "-Pkotlin.native.ignoreDisabledTargets=true" "-Dfile.encoding=UTF-8" "-DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake" "-DBoost_INCLUDE_DIR=C:/vcpkg/installed/x64-windows/include" "-Dorg.gradle.jvmargs=-Xmx4g" "-Dkotlin.daemon.jvm.options=-Xmx4g" "-Pani.android.abis=x86_64"'
    - id: 'step-5'
      name: 'Check'
      uses: 'nick-fields/retry@v2'
      with:
        timeout_minutes: '60'
        max_attempts: '2'
        command: './gradlew check "--scan" "--no-configuration-cache" "-Porg.gradle.daemon.idletimeout=60000" "-Pkotlin.native.ignoreDisabledTargets=true" "-Dfile.encoding=UTF-8" "-DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake" "-DBoost_INCLUDE_DIR=C:/vcpkg/installed/x64-windows/include" "-Dorg.gradle.jvmargs=-Xmx4g" "-Dkotlin.daemon.jvm.options=-Xmx4g" "-Pani.android.abis=x86_64"'
    - id: 'step-6'
      name: 'Build mediamp-mpv'
      run: './gradlew copyNativeJarForCurrentPlatform "--scan" "--no-configuration-cache" "-Porg.gradle.daemon.idletimeout=60000" "-Pkotlin.native.ignoreDisabledTargets=true" "-Dfile.encoding=UTF-8" "-DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake" "-DBoost_INCLUDE_DIR=C:/vcpkg/installed/x64-windows/include" "-Dorg.gradle.jvmargs=-Xmx4g" "-Dkotlin.daemon.jvm.options=-Xmx4g" "-Pani.android.abis=x86_64"'
    - id: 'step-7'
      name: 'Upload mediamp-mpv native builds'
      uses: 'actions/upload-artifact@v4'
      with:
        name: 'mediamp-mpv-windows-x64'
        path: 'mediamp-mpv/build/native-jars/mediamp-mpv-*.jar'
        if-no-files-found: 'error'
        overwrite: 'true'
  build_github-macos-13:
    name: 'Build (macOS 13 x86_64 (GitHub))'
    runs-on:
    - 'macos-13'
    permissions:
      actions: 'write'
    steps:
    - id: 'step-0'
      uses: 'actions/checkout@v4'
      with:
        lfs: 'true'
        submodules: 'recursive'
    - id: 'step-1'
      name: 'Free space for macOS'
      continue-on-error: true
      run: 'chmod +x ./ci-helper/free-space-macos.sh && ./ci-helper/free-space-macos.sh'
    - id: 'step-2'
      name: 'Setup JBR 21 for other OS'
      uses: 'gmitch215/setup-java@6d2c5e1f82f180ae79f799f0ed6e3e5efb4e664d'
      with:
        java-version: '21'
        distribution: 'jetbrains'
      env:
        GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    - id: 'step-3'
      run: 'echo "jvm.toolchain.version=21" >> local.properties'
    - id: 'step-4'
      run: 'chmod -R 777 .'
    - id: 'step-5'
      name: 'Install dependencies for macOS'
      run: 'brew install ninja'
    - id: 'step-6'
      name: 'Setup Gradle'
      uses: 'gradle/actions/setup-gradle@v3'
      with:
        cache-disabled: 'true'
    - id: 'step-7'
      name: 'Clean and download dependencies'
      uses: 'nick-fields/retry@v2'
      with:
        timeout_minutes: '60'
        max_attempts: '3'
        command: './gradlew "--scan" "--no-configuration-cache" "-Porg.gradle.daemon.idletimeout=60000" "-Pkotlin.native.ignoreDisabledTargets=true" "-Dfile.encoding=UTF-8" "-Dorg.gradle.jvmargs=-Xmx4g" "-Dkotlin.daemon.jvm.options=-Xmx4g"'
    - id: 'step-8'
      name: 'Check'
      uses: 'nick-fields/retry@v2'
      with:
        timeout_minutes: '60'
        max_attempts: '2'
        command: './gradlew check "--scan" "--no-configuration-cache" "-Porg.gradle.daemon.idletimeout=60000" "-Pkotlin.native.ignoreDisabledTargets=true" "-Dfile.encoding=UTF-8" "-Dorg.gradle.jvmargs=-Xmx4g" "-Dkotlin.daemon.jvm.options=-Xmx4g"'
    - id: 'step-9'
      name: 'Build mediamp-mpv'
      run: './gradlew copyNativeJarForCurrentPlatform "--scan" "--no-configuration-cache" "-Porg.gradle.daemon.idletimeout=60000" "-Pkotlin.native.ignoreDisabledTargets=true" "-Dfile.encoding=UTF-8" "-Dorg.gradle.jvmargs=-Xmx4g" "-Dkotlin.daemon.jvm.options=-Xmx4g"'
    - id: 'step-10'
      name: 'Upload mediamp-mpv native builds'
      uses: 'actions/upload-artifact@v4'
      with:
        name: 'mediamp-mpv-macos-x64'
        path: 'mediamp-mpv/build/native-jars/mediamp-mpv-*.jar'
        if-no-files-found: 'error'
        overwrite: 'true'
  build_self-hosted-macos-15:
    name: 'Build (macOS 15 AArch64 (Self-Hosted))'
    runs-on:
    - 'self-hosted'
    - 'macOS'
    - 'ARM64'
    permissions:
      actions: 'write'
    if: '${{ github.repository == ''open-ani/mediamp'' }}'
    steps:
    - id: 'step-0'
      uses: 'actions/checkout@v4'
      with:
        lfs: 'true'
        submodules: 'recursive'
    - id: 'step-1'
      name: 'Resolve JBR location'
      run: |-
        # Expand jbrLocationExpr
        jbr_location_expr=$(eval echo ${{ runner.tool_cache }}/jbrsdk_jcef-21.0.5-osx-aarch64-b631.8.tar.gz)
        echo "jbrLocation=$jbr_location_expr" >> $GITHUB_OUTPUT
    - id: 'step-2'
      name: 'Get JBR 21 for macOS AArch64'
      env:
        jbrLocation: '${{ steps.step-1.outputs.jbrLocation }}'
      run: |-
        jbr_location="$jbrLocation"
        checksum_url="https://cache-redirector.jetbrains.com/intellij-jbr/jbrsdk_jcef-21.0.5-osx-aarch64-b631.8.tar.gz.checksum"
        checksum_file="checksum.tmp"
        wget -q -O $checksum_file $checksum_url

        expected_checksum=$(awk '{print $1}' $checksum_file)
        file_checksum=""

        if [ -f "$jbr_location" ]; then
            file_checksum=$(shasum -a 512 "$jbr_location" | awk '{print $1}')
        fi

        if [ "$file_checksum" != "$expected_checksum" ]; then
            wget -q --tries=3 https://cache-redirector.jetbrains.com/intellij-jbr/jbrsdk_jcef-21.0.5-osx-aarch64-b631.8.tar.gz -O "$jbr_location"
            file_checksum=$(shasum -a 512 "$jbr_location" | awk '{print $1}')
        fi

        if [ "$file_checksum" != "$expected_checksum" ]; then
            echo "Checksum verification failed!" >&2
            rm -f $checksum_file
            exit 1
        fi

        rm -f $checksum_file
        file "$jbr_location"
    - id: 'step-3'
      name: 'Setup JBR 21 for macOS AArch64'
      uses: 'gmitch215/setup-java@6d2c5e1f82f180ae79f799f0ed6e3e5efb4e664d'
      with:
        java-version: '21'
        distribution: 'jdkfile'
        jdkFile: '${{ steps.step-1.outputs.jbrLocation }}'
      env:
        GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
    - id: 'step-4'
      run: 'echo "jvm.toolchain.version=21" >> local.properties'
    - id: 'step-5'
      run: 'chmod -R 777 .'
    - id: 'step-6'
      name: 'Setup Gradle'
      uses: 'gradle/actions/setup-gradle@v3'
      with:
        cache-disabled: 'true'
    - id: 'step-7'
      name: 'Clean and download dependencies'
      uses: 'nick-fields/retry@v2'
      with:
        timeout_minutes: '60'
        max_attempts: '3'
        command: './gradlew "--scan" "--no-configuration-cache" "-Porg.gradle.daemon.idletimeout=60000" "-Pkotlin.native.ignoreDisabledTargets=true" "-Dfile.encoding=UTF-8" "-Dorg.gradle.jvmargs=-Xmx4g" "-Dkotlin.daemon.jvm.options=-Xmx4g" "--parallel" "-Pani.android.abis=arm64-v8a"'
    - id: 'step-8'
      name: 'Check'
      uses: 'nick-fields/retry@v2'
      with:
        timeout_minutes: '60'
        max_attempts: '2'
        command: './gradlew check "--scan" "--no-configuration-cache" "-Porg.gradle.daemon.idletimeout=60000" "-Pkotlin.native.ignoreDisabledTargets=true" "-Dfile.encoding=UTF-8" "-Dorg.gradle.jvmargs=-Xmx4g" "-Dkotlin.daemon.jvm.options=-Xmx4g" "--parallel" "-Pani.android.abis=arm64-v8a"'
    - id: 'step-9'
      name: 'Build mediamp-mpv'
      run: './gradlew copyNativeJarForCurrentPlatform "--scan" "--no-configuration-cache" "-Porg.gradle.daemon.idletimeout=60000" "-Pkotlin.native.ignoreDisabledTargets=true" "-Dfile.encoding=UTF-8" "-Dorg.gradle.jvmargs=-Xmx4g" "-Dkotlin.daemon.jvm.options=-Xmx4g" "--parallel" "-Pani.android.abis=arm64-v8a"'
    - id: 'step-10'
      name: 'Upload mediamp-mpv native builds'
      uses: 'actions/upload-artifact@v4'
      with:
        name: 'mediamp-mpv-macos-aarch64'
        path: 'mediamp-mpv/build/native-jars/mediamp-mpv-*.jar'
        if-no-files-found: 'error'
        overwrite: 'true'
    - id: 'step-11'
      name: 'Cleanup temp files'
      continue-on-error: true
      run: 'chmod +x ./ci-helper/cleanup-temp-files-macos.sh && ./ci-helper/cleanup-temp-files-macos.sh'
